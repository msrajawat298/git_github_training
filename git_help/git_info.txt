# git init       // use to intiate git repo
# rm -rf .git   //use to remove .git
# git config --global user.email "email@gmail.com"
# git config --global user.name "your username"
# git config --global user.password "password"
# git config -l //to check all the config is set or not
# git status
# git add <filename seprate with space>
# "git restore <file>..." to discard changes in working directory
# git commit -m "commit message"
# git reset HEAD *.txt (for revert file from stage to unstage)
# git reset HEAD yourfilename
# git rm filename 
# git branch new_branch // how to create branch
# git checkout -b ＜new-branch＞ //this cmd also use to create a branch and it will also switch the branch after create
# git branch -d branch_name  //use to delte branch from local
# git pull <url>
# git ls-files -m //git status only modified files
# git branch --all
# git log
# git log <branch_name> //for see secific branch
# git log <branch_name> --not <master_branch_name>
# git show a303aa90779efdd2f6b9d90693e2cbbbe4613c1d
# git branch -m <oldname> <newname> //rename the branch
# git rm -rf --cached .
# git add .
# git status only modified files : git ls-files -m
# git branch --all
# git log
# git log <branch_name> //for see secific branch
# git log <branch_name> --not <master_branch_name>
# git show a303aa90779efdd2f6b9d90693e2cbbbe4613c1d


If you want to push the code to your online repository whether its is (git-lab, github, bit-bucket etc) need to set the remote. for example
# git remote add origin <url of your repository>
Note : if your repository is private then need to be pass the token url or ssh key
LIKE :: https://username:access_token@github.com/username/repo_name.git
For check what remote url is set use 
# git remote -v
# git remote set-url origin "REPO URL" // used to update remote origin
# git clone <repository url> //used to download the online repository code in local

Git vs SVN commands
==================================
      svn       |      git
================|=======================
svn checkout    | git clone
svn commit      | git commit then git push // to publish local commit to remote repo.
svn cat         | git show
svn status      | git status
svn diff        | git diff
svn log         | git log
svn add         | git add
svn mv          | git mv
svn rm          | git rm
svn merge       | git merge
svn update      | git pull / git fetch
.svnignore      | gitignore

Revert in SVN is the cancel of change, but Revert in Git is the commit for negation. The meanings of Revert are different.
Branch and tag are the same in the structure in SVN, but they are clearly different in Git
SVN does not have the concept of local repository/remote repository, accordingly commit is directly reflected in the remote. However, Git has different reflecting methods for reflecting to the local repository and for reflecting to the remote repository.


Best way to apply git patch.
==============================
https://git-scm.com/docs/git-apply

Note: You can first preview what your patch will do:
=========================================
use full flag mostly used::

--summary
--stat
--check
--verbose or -v
--reject
--whitespace=<action> like fix, warn ,error etc.


First the stats:
	git apply --stat a_file.patch
	
Then a dry run to detect errors:
	git apply --check a_file.patch

you can also use this cmd this will give you more details	
git apply --verbose step-1-4over_product_setup.diff > cheffile.txt

if result is shown as you need the you can run this cmd	
git apply name-of-file.patch (if any white space is found or line is missing then patch is not apply by default but we need to apply the patch and any error found then reject the file and create other rej. file for refrence then you can use below command)
git apply --reject --whitespace=fix 4over_code_v91.patch

Show all branch ::
git branch --all

Step to delete Branch from github ::
================================================
	git push origin --delete test_branch

Step to delete Branch from Local ::
=================================================
	git branch -d <local-branch>
		or
	git branch --delete test_branch
		or
	git branch -D <local-branch> (-D force deletion of the branch, even if it contains unmerged / unpushed commits. )

Q. How-to-change-the-commit-author-for-one-specific-commit

	git commit -m "commit message --amend --author="Mayank singh Kushwah <email@address.com>" --no-edit

Q.	How to name and retrieve a stash by name in git?
	git stash push -m "my_stash"

Q.	How-can-i-merge-two-commits-into-one
	git reset --soft "HEAD~n" (where n is any number merge recent last comit up to 1,20)

If you want to rename a branch while pointed to any branch, do:
=================================================
git branch -m <oldname> <newname>
If you want to rename the current branch, you can do:

git branch -m <newname>
If you want to push the local branch and reset the upstream branch:

git push origin -u <newname>
And finally if you want to Delete the remote branch:

git push origin --delete <oldname>

Know More ::
==============
https://www.educative.io/answers/how-to-remove-untracked-files-in-git

Using git diff to list all the changed files between two commits ::
https://www.w3docs.com/snippets/git/how-to-list-all-the-files-in-a-commit.html
====================================================================================================
git diff --name-only <start-commit>..<end-commit>
e.g,	
	git diff --name-only 48438e4ea1e57f6cde8091b2694217a545c0ccb4..03b1e7e3e3c5ed92cd1e17865f096fb08527d463


How to merge multiple commit in single | How to merge multiple commits


git rebase -i HEAD~n // where n is commmit count how many commit you to merge
squash
git push origin <branch_name>